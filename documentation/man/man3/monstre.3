.TH "monstre" 3 "Fri Apr 21 2017" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
monstre
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBpersonnage\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmonstre\fP ()"
.br
.RI "Constructeur vide\&. "
.ti -1c
.RI "\fBmonstre\fP (std::string name, int hpMax, int speed)"
.br
.RI "Constructeur avec carac d'un monstre\&. "
.ti -1c
.RI "\fBmonstre\fP (std::string name, int hpMax, int speed, std::vector< \fBcompetence\fP > allSkills)"
.br
.RI "Constructeur avec les compétences\&. "
.ti -1c
.RI "template<typename T > std::string \fBtoString\fP (const T &valeur)"
.br
.ti -1c
.RI "std::string \fBgetName\fP ()"
.br
.RI "Getter pour le nom\&. "
.ti -1c
.RI "int \fBgetHpMax\fP ()"
.br
.RI "Getter pour le nombre de points de vie max\&. "
.ti -1c
.RI "int \fBgetHpCurrent\fP ()"
.br
.RI "Getter pour le nombre de points de vie actuels\&. "
.ti -1c
.RI "int \fBgetSpeed\fP ()"
.br
.RI "Getter pour la vitesse d'attaque du monstre\&. "
.ti -1c
.RI "bool \fBgetAlive\fP ()"
.br
.RI "Getter qui permet de savoir si le monstre est en vie\&. "
.ti -1c
.RI "std::vector< \fBcompetence\fP > \fBgetSkillVect\fP ()"
.br
.RI "Getter qui renvoie un vecteur (std::vector) de compétences\&. "
.ti -1c
.RI "std::string \fBmonstreString\fP ()"
.br
.RI "Retour d'une string représentant un monstre\&. "
.ti -1c
.RI "int \fBnbLigneFichier\fP (std::string nomFichier)"
.br
.RI "Retourne le nombre de lignes d'un fichier\&. "
.ti -1c
.RI "void \fBsaveInFile\fP ()"
.br
.RI "Permet d'écrire le monstre dans un fichier de sauvegarde\&. "
.ti -1c
.RI "void \fBprintMonstre\fP ()"
.br
.RI "Pour tester\&. "
.ti -1c
.RI "bool \fBenleverVie\fP (int degats)"
.br
.RI "Enlève x points de vie au monstre\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::string \fBname\fP"
.br
.ti -1c
.RI "int \fBhpMax\fP"
.br
.ti -1c
.RI "int \fBhpCurrent\fP"
.br
.ti -1c
.RI "int \fBspeed\fP"
.br
.ti -1c
.RI "bool \fBalive\fP"
.br
.ti -1c
.RI "std::vector< \fBcompetence\fP > \fBskillVect\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "monstre::monstre (std::string name, int hpMax, int speed)"

.PP
Constructeur avec carac d'un monstre\&. Constructeur assignant tout, sauf les compétences, qui ne seront pas rajoutées (pas de fonctions)\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP Le nom du monstre\&. 
.br
\fIhpMax\fP Le nombre de points de vie max du monstre\&. 
.br
\fIspeed\fP La vitesse d'attaque du monstre\&. 
.RE
.PP

.SS "monstre::monstre (std::string name, int hpMax, int speed, std::vector< \fBcompetence\fP > allSkills)"

.PP
Constructeur avec les compétences\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP Le nom du monstre\&. 
.br
\fIhpMax\fP Le nombre de points de vie max du monstre\&. 
.br
\fIspeed\fP La vitesse d'attaque du monstre\&. 
.br
\fIallSkills\fP Un vecteur (std::vector) contenant toutes les compétences de ce monstre\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "bool monstre::enleverVie (int degats)"

.PP
Enlève x points de vie au monstre\&. Cette fonction permet d'enlever des points de vie\&. Elle permet aussi de savoir si un monstre est en vie (ptsVie < 0) ou si il est mort\&. 
.PP
\fBReturns:\fP
.RS 4
Un booléen qui est égal à \fCtrue\fP si le monstre est mort, \fCfalse\fP sinon\&. 
.RE
.PP

.SS "std::string monstre::monstreString ()"

.PP
Retour d'une string représentant un monstre\&. Convertit un objet monstre en une ligne de string\&. 
.PP
\fBPostcondition:\fP
.RS 4
La string contiendra les infos dans cet ordre :
.IP "\(bu" 2
identifiant (type \fCm<entier>\fP)
.IP "\(bu" 2
nom du monstre
.IP "\(bu" 2
nombre de points de vie
.IP "\(bu" 2
vitesse d'attaque
.IP "\(bu" 2
toutes les compétences , séparées par des \fC:\fP 
.PP
.RE
.PP

.SS "int monstre::nbLigneFichier (std::string nomFichier)"

.PP
Retourne le nombre de lignes d'un fichier\&. Compte le nb de ligne du fichier pour créer l'identifiant unique d'un monstre\&. L'identifiant sera \fC nbLignes + 1 \fP 
.PP
\fBReturns:\fP
.RS 4
Un entier représentant le nombre de lignes\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fInomFichier\fP Une string (std::string) qui sera le nom du fichier à ouvrir\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
